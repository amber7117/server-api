{
  "name": "service-job-api",
  "deployment": "laxaar-service-job-api",
  "version": "0.3.0",
  "description": "Generic Architecture For Express JS based apps with any type of backend",
  "main": "dist",
  "scripts": {
    "clean": "run-script-os",
    "clean:default": "rm -rf package-lock.json yarn.lock && rm -rf node_modules && npm i",
    "clean:win32": "del /q /s package-lock.json yarn.lock && rd /s /q node_modules && npm i",
    "dev": "run-script-os",
    "dev:default": "export NODE_ENV=development && nodemon -w src --exec \"webpack --mode development && node dist/\"",
    "dev:win32": "SET NODE_ENV=development && nodemon -w src --exec \"webpack --mode development && node dist/\"",
    "debug": "run-script-os",
    "debug:default": "export NODE_ENV=development && nodemon -w src --exec \"webpack --mode development && node dist/\" --inspect=5858",
    "debug:win32": "export NODE_ENV=development && nodemon -w src --exec \"webpack --mode development && node dist/\" --inspect=5858",
    "build": "webpack --mode production && node generate-production-package-json.js && cp .npmrc dist/ && cp Procfile dist/ && cp -R src/assets dist/",
    "build:default": "webpack --mode production && node generate-production-package-json.js && cp .npmrc dist/ && cp Procfile dist/ && cp -R src/assets dist/",
    "build:win32": "webpack --mode production && node generate-production-package-json.js && xcopy .npmrc dist/ && xcopy Procfile dist/ && xcopy /E src/assets dist/",
    "test": "eslint src",
    "prod": "run-script-os",
    "prod:default": "NODE_ENV=production node dist/index.js",
    "prod:win32": "SET NODE_ENV=production && node dist/index.js",
    "start": "run-script-os",
    "start:win32": "if %NODE_ENV% == \"production\" ( npm run prod) else (npm run dev)",
    "start:default": "if test \"$NODE_ENV\" = \"production\"; then npm run prod; else npm run dev; fi",
    "postinstall": "npm run postinstall-run",
    "postinstall-run": "run-script-os",
    "postinstall-run:default": "if test \"$NODE_ENV\" = \"production\" && [ -d \"src\" ]; then npm run build; fi",
    "postinstall-run:win32": "if %NODE_ENV% == \"production\"  if EXIST src  ( npm run build) "
  },
  "engines": {
    "node": "10.16.3"
  },
  "eslintConfig": {
    "extends": "eslint:recommended",
    "parserOptions": {
      "ecmaVersion": 7,
      "sourceType": "module"
    },
    "env": {
      "node": true
    },
    "rules": {
      "no-console": 0,
      "no-unused-vars": 1
    }
  },
  "dependencies": {
    "@babel/polyfill": "^7.0.0",
    "arivaa-logging": "git+https://gitlab+deploy-token-20543:_NeYJU4Ruz3g9iozUPJc@gitlab.com/arivaa/logging.git",
    "arivaa-utils": "git+https://gitlab+deploy-token-20565:DspKtwic7Q2N1HrnysKJ@gitlab.com/arivaa/utils.git",
    "arivaa-utils-firebase": "git+https://gitlab+deploy-token-20916:rAsmdrShM827Hpdgc7dQ@gitlab.com/arivaa/utils-firebase.git",
    "arivaa-utils-mail": "git+https://gitlab+deploy-token-45174:Az1hcPLsADk16TQqZ6tz@gitlab.com/arivaa/utils-mail.git",
    "arivaa-utils-sms": "git+https://gitlab+deploy-token-155068:keq86XDfUDEbcRRx8pLY@gitlab.com/arivaa/utils-sms.git",
    "arivaa-utils-storage": "git+https://gitlab+deploy-token-48933:-3dqKudXhVkyzMnxhz64@gitlab.com/arivaa/utils-storage.git",
    "axios": "^0.19.2",
    "body-parser": "^1.13.3",
    "compression": "^1.5.2",
    "cors": "^2.7.1",
    "cron": "^1.8.2",
    "crypto-js": "^4.0.0",
    "dotenv": "^8.2.0",
    "elasticlunr": "^0.9.5",
    "elasticsearch": "^16.1.1",
    "express": "^4.13.3",
    "express-async-errors": "^3.0.0",
    "firebase": "4.9.1",
    "firebase-admin": "^5.12.1",
    "handlebars": "^4.7.2",
    "handlebars-helpers": "^0.10.0",
    "joi": "^14.3.1",
    "lodash": "^4.10.1",
    "mailgun-js": "^0.22.0",
    "memory-cache": "^0.2.0",
    "morgan": "^1.8.0",
    "multer": "^1.4.1",
    "request": "^2.88.0",
    "utils-email": "git+https://gitlab+deploy-token-182328:6g9LDX2XzUbww9_tZkze@gitlab.com/arivaa/utils-email.git",
    "uuid": "^3.3.2",
    "wkhtmltopdf": "^0.3.4"
  },
  "devDependencies": {
    "@babel/cli": "^7.0.0",
    "@babel/core": "^7.0.0",
    "@babel/node": "^7.0.0",
    "@babel/plugin-proposal-class-properties": "^7.0.0",
    "@babel/plugin-proposal-decorators": "^7.0.0",
    "@babel/plugin-proposal-do-expressions": "^7.0.0",
    "@babel/plugin-proposal-export-default-from": "^7.0.0",
    "@babel/plugin-proposal-export-namespace-from": "^7.0.0",
    "@babel/plugin-proposal-function-bind": "^7.0.0",
    "@babel/plugin-proposal-function-sent": "^7.0.0",
    "@babel/plugin-proposal-json-strings": "^7.0.0",
    "@babel/plugin-proposal-logical-assignment-operators": "^7.0.0",
    "@babel/plugin-proposal-nullish-coalescing-operator": "^7.0.0",
    "@babel/plugin-proposal-numeric-separator": "^7.0.0",
    "@babel/plugin-proposal-optional-chaining": "^7.0.0",
    "@babel/plugin-proposal-pipeline-operator": "^7.0.0",
    "@babel/plugin-proposal-throw-expressions": "^7.0.0",
    "@babel/plugin-syntax-dynamic-import": "^7.0.0",
    "@babel/plugin-syntax-import-meta": "^7.0.0",
    "@babel/plugin-transform-runtime": "^7.0.0",
    "@babel/preset-env": "^7.0.0",
    "@babel/preset-react": "^7.0.0",
    "babel-preset-minify": "^0.5.1",
    "eslint": "^3.1.1",
    "nodemon": "^1.9.2",
    "run-script-os": "^1.1.1",
    "webpack": "^4.42.0",
    "webpack-cli": "^3.3.11",
    "webpack-node-externals": "^1.7.2"
  }
}
